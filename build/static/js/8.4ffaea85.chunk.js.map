{"version":3,"sources":["modules/searchlisting/archiveHeader.js","modules/searchlisting/tweetArchive.js","services/index.js","managers/httpService.js","services/tweetServices.js"],"names":["makeStyles","theme","span","marginTop","fontFamily","fontSize","display","no_of_tweets_archived","marginRight","styled","div","img","Container","Heading","Tweetdata","Name","Email","Time","Date","Details","Mainbox","useStyles","root","justifyContent","mainColumn","width","first_row","padding","second_row","paddingTop","third_row","paddingBottom","avatar","marginLeft","span_tweet","fontWeight","popupgrid","hr_page","color","mainLoaderRow","flexFlow","height","TweetArchive","props","classes","textId","useParams","useState","advanceSearch","setAdvancesearch","isLoading","setLoading","JSON","parse","localStorage","getItem","setMode","useEffect","fetchbyAdvanceSearch","a","data","tweet","Utils","parseResponse","TweetService","getTweetDetails","err","res","createBasicTime","createdAt","date","moment","format","advanceValue","text","advanceName","name","createAdvanceTime","advanceDate","advanceTime","advanceIcon","split","map","x","charAt","join","substr","toUpperCase","advanceHandle","username","CheckMode","mode","setItem","Grid","xs","className","Avatar","length","httpService","method","headers","url","requestOptions","httpConstants","METHOD_TYPE","GET","body","stringify","fetch","then","response","ok","responseText","Promise","reject","success","responseCode","message","responseData","statusText","catch","getSaveTweetList","getReadTweetList","getReadGraphData","getSaveGraphData","getBasicSearch","getAdvanceSearch","getMapHashtags","getMaxTps","saveMaxTps","requestData","process","API_END_POINT","SAVE_MAX_TPS","POST","CONTENT_TYPE","APPLICATION_JSON","resolve","keyword","hash"],"mappings":"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","file":"static/js/8.4ffaea85.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  span: {\r\n    marginTop: \"16px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontSize: \"18px\",\r\n    display: \"flex\",\r\n  },\r\n  no_of_tweets_archived: {\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    marginRight: \"4px\",\r\n  },\r\n}));\r\n\r\nconst DesktopView = styled.div`\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: visible;\r\n  }\r\n  @media (min-width: 768px) {\r\n    display: visible;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  background-color: #2149b9;\r\n`;\r\nconst Image = styled.img`\r\n  padding: 10px;\r\n  margin-left: 55px;\r\n  width: 57px;\r\n  margin-top: 10px;\r\n`;\r\nconst MobileImage = styled.img`\r\n  padding: 10px;\r\n  margin-left: -10px;\r\n  width: 57px;\r\n  margin-top: 3px;\r\n`;\r\nconst Span = styled.span`\r\n  color: #ffffff;\r\n  background-color: #2149b9;\r\n  font-size: 21px;\r\n  margin-top: 26px;\r\n  font-weight: 600;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.19;\r\n`;\r\n\r\nexport default function Headerconditional() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <DesktopView>\r\n        <Container>\r\n          <Row>\r\n            <a href=\"/\">\r\n              <Image src={require(\"../Header/TwitterLogo.png\")} />\r\n            </a>\r\n            <Span>XDC Speed Test</Span>\r\n          </Row>\r\n        </Container>\r\n      </DesktopView>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\n// import Popup from \"../popupbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport HeaderComponent from \"./archiveHeader\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport FooterComponent from \"../Footer/footer\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport Header from \"../Header/header\";\r\nimport Loader from \"./loader\";\r\nimport Utils from \"../../utility\";\r\nimport { TweetService } from \"../../services/index\";\r\n\r\nconst Container = styled.div`\r\n  width: 500px;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  border: solid 0.5px #d3d3d3;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n  @media (min-width: 2000px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 15px;\r\n  padding-top: 3%;\r\n  padding-left: 4%;\r\n`;\r\n\r\nconst BackArrow = styled.span`\r\n  color: #1e90ff;\r\n  font-size: 15px;\r\n  padding-top: 3%;\r\n  padding-left: 2%;\r\n`;\r\nconst Tweetdata = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  border: solid #5b6dcd 1px;\r\n  border: none;\r\n  padding: 3%;\r\n`;\r\nconst Imagedata = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  border: solid #5b6dcd 1px;\r\n  border-radius: 15px;\r\n  border: Visible;\r\n  // padding: 1%;\r\n`;\r\nconst Name = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 15px;\r\n  margin-left: 1%;\r\n`;\r\nconst Email = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 11px;\r\n`;\r\nconst Time = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst QuoteTweet = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst QuoteTweetcount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Likes = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Date = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Twitterwebapp = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Retweets = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Retweetscount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Likescount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Like = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 10px;\r\n`;\r\nconst Details = styled.div`\r\n  border: none;\r\n`;\r\nconst Mainbox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  /* @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 100%;\r\n    padding-left: 10%;\r\n    padding-right: 10%;\r\n  } */\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // justifyContent: 'flex-end',\r\n    justifyContent: \"center\",\r\n  },\r\n  mainColumn: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  first_row: {\r\n    padding: \"2%\",\r\n  },\r\n  second_row: {\r\n    paddingTop: \"2%\",\r\n  },\r\n  third_row: {\r\n    paddingBottom: \"3%\",\r\n  },\r\n\r\n  avatar: {\r\n    marginLeft: \"2%\",\r\n  },\r\n  span_tweet: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"20\",\r\n  },\r\n  popupgrid: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"16px\",\r\n  },\r\n  hr_page: {\r\n    width: \"100%\",\r\n    color: \"red\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  mainLoaderRow: {\r\n    display: \"flex\",\r\n    flexFlow: \"row-nowrap\",\r\n  },\r\n  \"@media (min-width: 0px) and (max-width: 766px)\": {\r\n    mainLoaderRow: {\r\n      // padding: \"0px 76px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  \"@media (min-width: 2000px)\": {\r\n    mainLoaderRow: {\r\n      width: \"500px\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n}));\r\nexport default function TweetArchive(props) {\r\n  const classes = useStyles();\r\n  const textId = useParams();\r\n  const [advanceSearch, setAdvancesearch] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  // mode:\r\n\r\n  const getMode = () => {\r\n    return JSON.parse(localStorage.getItem(\"mode\")) || false;\r\n  };\r\n  const [dark, setMode] = useState(getMode());\r\n\r\n  const CheckMode = (mode) => {\r\n    localStorage.setItem(\"mode\", mode);\r\n    setMode(mode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchbyAdvanceSearch();\r\n  }, []);\r\n\r\n  const fetchbyAdvanceSearch = async () => {\r\n    let data = textId?.tweet;\r\n    const [err, res] = await Utils.parseResponse(\r\n      TweetService.getTweetDetails(data)\r\n    );\r\n    if (err) {\r\n      return err;\r\n    } else {\r\n      setAdvancesearch(res || \"\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // let value = search[0]?.text || \"\";\r\n  let createBasicTime = advanceSearch[0]?.createdAt || \"-\";\r\n  let date = moment(createBasicTime).format(\"LL\");\r\n  let time = moment(createBasicTime).format(\"LT\");\r\n\r\n  let advanceValue = advanceSearch[0]?.text || \"\";\r\n  let advanceName = advanceSearch[0]?.name || \"-\";\r\n  let createAdvanceTime = advanceSearch[0]?.createdAt || \"-\";\r\n  let advanceDate = moment(createAdvanceTime).format(\"LL\");\r\n  let advanceTime = moment(createAdvanceTime).format(\"LT\");\r\n  let advanceIcon =\r\n    advanceName[0]\r\n      ?.split(\" \")\r\n      ?.map((x) => x.charAt(0))\r\n      ?.join(\"\")\r\n      ?.substr(0, 1)\r\n      ?.toUpperCase() || \"-\";\r\n  let advanceHandle = advanceSearch[0]?.username || \"\";\r\n\r\n  return (\r\n    <>\r\n      <Header CheckMode={CheckMode} />\r\n      <br />\r\n      {isLoading ? (\r\n        <Grid xs={12}>\r\n          <Mainbox>\r\n            <Row className={classes.mainLoaderRow}>\r\n              <Container>\r\n                <Column className={classes.mainColumn}>\r\n                  <Row>\r\n                    <Heading className={classes.span_tweet}>\r\n                      <span className={classes.span_tweet}>Tweet</span>\r\n                    </Heading>\r\n                  </Row>\r\n                  <hr className={classes.hr_page} />\r\n                  <Row>\r\n                    <Avatar className={classes.avatar}>-</Avatar>\r\n                    <Name>\r\n                      <Row className={classes.span_tweet}>{\"\"}</Row>\r\n                      <Row>\r\n                        <Email>{\"\"}</Email>\r\n                      </Row>\r\n                    </Name>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Tweetdata>\r\n                      {\"\"}\r\n                      <Loader />\r\n                      {\"\"}\r\n                    </Tweetdata>\r\n                  </Row>\r\n                  <hr className={classes.hr_page} />\r\n                  <Row className={classes.second_row}>\r\n                    <Details>\r\n                      <Time>\r\n                        {\" \"}\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {\"\"}\r\n                        &emsp;\r\n                      </Time>\r\n                      <Date>\r\n                        &nbsp;\r\n                        {\"\"}\r\n                        &emsp;\r\n                      </Date>\r\n                    </Details>\r\n                  </Row>\r\n                  <br />\r\n                </Column>\r\n              </Container>\r\n            </Row>\r\n          </Mainbox>\r\n        </Grid>\r\n      ) : (\r\n        <Grid xs={12}>\r\n          <Mainbox>\r\n            <Row className={classes.mainLoaderRow}>\r\n              <Container>\r\n                <Column className={classes.mainColumn}>\r\n                  <Row>\r\n                    {/* <BackArrow>\r\n                      <a href=\"/\">\r\n                        <ArrowBackIcon />\r\n                      </a>\r\n                    </BackArrow> */}\r\n                    <Heading className={classes.span_tweet}>\r\n                      <span className={classes.span_tweet}>Tweet</span>\r\n                    </Heading>\r\n                  </Row>\r\n                  <hr className={classes.hr_page} />\r\n                  <Row>\r\n                    <Avatar className={classes.avatar}>\r\n                      {advanceSearch ? advanceIcon : \"-\"}\r\n                    </Avatar>\r\n                    <Name>\r\n                      <Row className={classes.span_tweet}>\r\n                        {advanceSearch ? advanceName : \"-\"}\r\n                      </Row>\r\n                      <Row>\r\n                        <Email>\r\n                          {advanceSearch ? \"@\" + advanceHandle : \"\"}\r\n                        </Email>\r\n                      </Row>\r\n                    </Name>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Tweetdata>\r\n                      <span className={classes.span_tweet}>\r\n                        {advanceSearch?.length >= 1 ? advanceValue : \"\"}\r\n                      </span>\r\n                    </Tweetdata>\r\n                  </Row>\r\n                  <hr className={classes.hr_page} />\r\n                  <Row className={classes.second_row}>\r\n                    <Details>\r\n                      <Time>\r\n                        {\" \"}\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {advanceSearch.length >= 1 ? advanceTime : \"\"}\r\n                        &emsp;\r\n                      </Time>\r\n                      <Date>\r\n                        &nbsp;\r\n                        {advanceSearch\r\n                          ? advanceDate\r\n                            ? advanceDate\r\n                            : \"Loading..\"\r\n                          : date\r\n                          ? date\r\n                          : \"Loading..\"}\r\n                        &emsp;\r\n                      </Date>\r\n                    </Details>\r\n                  </Row>\r\n                  <br />\r\n                </Column>\r\n              </Container>\r\n            </Row>\r\n          </Mainbox>\r\n        </Grid>\r\n      )}\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n","export { default as TweetService } from \"./tweetServices\"","import { httpConstants } from \"../constants\";\r\n\r\nexport const httpService = (method, headers, data, url) => {\r\n  const requestOptions = {\r\n    method: method,\r\n    headers: headers || { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  if (method !== httpConstants.METHOD_TYPE.GET)\r\n    requestOptions.body = JSON.stringify(data);\r\n  return fetch(url, requestOptions)\r\n    .then(function handleResponse(response) {\r\n      //in case API is down-\r\n      if (!response || !response.ok)\r\n        return Promise.reject(\"Unable to fetch data\");\r\n\r\n      return response.text().then((responseText) => {\r\n        if (!responseText) return Promise.reject(responseText);\r\n\r\n        let data;\r\n        try {\r\n          data =\r\n            typeof responseText === \"object\"\r\n              ? responseText\r\n              : JSON.parse(responseText);\r\n          if (data && !data.success)\r\n            return Promise.reject(\r\n              (data && data.responseCode) === 404\r\n                ? data\r\n                : (data && {\r\n                    message: data.message,\r\n                    responseCode: data.responseCode,\r\n                    responseData: data.responseData,\r\n                  }) ||\r\n                    response.statusText\r\n            );\r\n        } catch (err) {\r\n          // console.log('Class: httpService, Function: fetch ==', err);\r\n          return Promise.reject(err);\r\n        }\r\n        return data;\r\n      });\r\n    })\r\n    .catch(function (err) {\r\n      // console.log('Class: httpService, Function: fetch ==', err);\r\n      return Promise.reject(err);\r\n    });\r\n};\r\nexport const httpGetService = (method, headers, data, url) => {\r\n  const requestOptions = {\r\n    method: method,\r\n    headers: headers || { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  if (method !== httpConstants.METHOD_TYPE.GET)\r\n    requestOptions.body = JSON.stringify(data);\r\n  return fetch(url, requestOptions)\r\n    .then(function handleResponse(response) {\r\n      return response.text().then((responseText) => {\r\n        if (!responseText) return Promise.reject(responseText);\r\n        let data;\r\n        try {\r\n          data =\r\n            typeof responseText === \"object\"\r\n              ? responseText\r\n              : JSON.parse(responseText);\r\n        } catch (err) {\r\n          // console.log('Class: httpService, Function: fetch ==', err);\r\n          return Promise.reject(err);\r\n        }\r\n        return data;\r\n      });\r\n    })\r\n    .catch(function (err) {\r\n      // console.log('Class: httpService, Function: fetch ==', err);\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getSaveTweetList,\r\n  getReadTweetList,\r\n  getReadGraphData,\r\n  getSaveGraphData,\r\n  getBasicSearch,\r\n  getAdvanceSearch,\r\n  getMapHashtags,\r\n  getTweetDetails,\r\n  getMaxTps,\r\n  saveMaxTps\r\n};\r\n\r\nasync function saveMaxTps(requestData) {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER + httpConstants.API_END_POINT.SAVE_MAX_TPS;\r\n\r\nreturn httpService(\r\n    httpConstants.METHOD_TYPE.POST,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n   requestData,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getSaveTweetList() {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER + process.env.REACT_APP_SAVED_TWEET;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getReadTweetList() {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER + process.env.REACT_APP_READ_TWEET;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getReadGraphData() {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_READ_SPEED_DATA;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getSaveGraphData() {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_SAVING_SPEED_DATA;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getBasicSearch(requestData) {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_BASIC_SEARCH +\r\n    requestData;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getAdvanceSearch(requestData) {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_ADVANCE_SEARCH +\r\n    \"name=\" +\r\n    requestData.username +\r\n    \"&keyword=\" +\r\n    requestData.keyword +\r\n    \"&hash=\" +\r\n    requestData.hash;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTweetDetails(requestData) {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_ARCHIVE_TWEET_FROM_TESTNET_FOR_ADVANCE_SEARCH +\r\n    requestData;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getMapHashtags() {\r\n  let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_TRENDING_HASHTAG;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getMaxTps() {\r\n    let url =\r\n    process.env.REACT_APP_BASE_URL_TWITTER +\r\n    process.env.REACT_APP_MAX_TPS_COUNT\r\n  \r\n    return httpService(\r\n      httpConstants.METHOD_TYPE.GET,\r\n      { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\r\n      {},\r\n      url\r\n    )\r\n      .then((response) => {\r\n        if (\r\n          !response.success ||\r\n          response.responseCode !== 200 ||\r\n          !response.responseData ||\r\n          response.responseData.length === 0\r\n        )\r\n          return Promise.reject();\r\n        return Promise.resolve(response.responseData);\r\n      })\r\n      .catch(function (err) {\r\n        return Promise.reject(err);\r\n      });\r\n  }"],"sourceRoot":""}