{"version":3,"sources":["modules/searchlisting/archiveHeader.js","modules/searchlisting/tweetArchive.js","services/index.js","managers/httpService.js","services/tweetServices.js"],"names":["makeStyles","theme","span","marginTop","fontFamily","fontSize","display","no_of_tweets_archived","marginRight","styled","div","img","Container","Heading","Tweetdata","Name","Email","Time","Date","Details","Mainbox","useStyles","root","justifyContent","mainColumn","width","first_row","padding","second_row","paddingTop","third_row","paddingBottom","avatar","marginLeft","span_tweet","fontWeight","popupgrid","hr_page","color","mainLoaderRow","flexFlow","height","TweetArchive","props","classes","textId","useParams","useState","advanceSearch","setAdvancesearch","isLoading","setLoading","JSON","parse","localStorage","getItem","setMode","useEffect","fetchbyAdvanceSearch","a","data","tweet","Utils","parseResponse","TweetService","getTweetDetails","err","res","createBasicTime","createdAt","date","moment","format","advanceValue","text","advanceName","name","createAdvanceTime","advanceDate","advanceTime","advanceIcon","split","map","x","charAt","join","substr","toUpperCase","advanceHandle","username","CheckMode","mode","setItem","Grid","xs","className","Avatar","length","httpService","method","headers","url","requestOptions","httpConstants","METHOD_TYPE","GET","body","stringify","fetch","then","response","ok","responseText","Promise","reject","success","responseCode","message","responseData","statusText","catch","getSaveTweetList","getReadTweetList","getReadGraphData","getSaveGraphData","getBasicSearch","getAdvanceSearch","getMapHashtags","getMaxTps","saveMaxTps","requestData","process","API_END_POINT","SAVE_MAX_TPS","POST","CONTENT_TYPE","APPLICATION_JSON","resolve","keyword","hash"],"mappings":"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","file":"static/js/8.3ca38de6.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\nimport { Row, Column } from \"simple-flexbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport React, { useState } from \"react\";\nimport { Grid } from \"react-bootstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n  span: {\n    marginTop: \"16px\",\n    fontFamily: \"Raleway,sans-serif !important\",\n    fontSize: \"18px\",\n    display: \"flex\",\n  },\n  no_of_tweets_archived: {\n    fontFamily: \"Raleway,sans-serif !important\",\n    marginRight: \"4px\",\n  },\n}));\n\nconst DesktopView = styled.div`\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: visible;\n  }\n  @media (min-width: 768px) {\n    display: visible;\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 80px;\n  background-color: #2149b9;\n`;\nconst Image = styled.img`\n  padding: 10px;\n  margin-left: 55px;\n  width: 57px;\n  margin-top: 10px;\n`;\nconst MobileImage = styled.img`\n  padding: 10px;\n  margin-left: -10px;\n  width: 57px;\n  margin-top: 3px;\n`;\nconst Span = styled.span`\n  color: #ffffff;\n  background-color: #2149b9;\n  font-size: 21px;\n  margin-top: 26px;\n  font-weight: 600;\n  font-family: \"Raleway\", sans-serif !important;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.19;\n`;\n\nexport default function Headerconditional() {\n  const classes = useStyles();\n  return (\n    <>\n      <DesktopView>\n        <Container>\n          <Row>\n            <a href=\"/\">\n              <Image src={require(\"../Header/TwitterLogo.png\")} />\n            </a>\n            <Span>XDC Speed Test</Span>\n          </Row>\n        </Container>\n      </DesktopView>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Column } from \"simple-flexbox\";\n// import Popup from \"../popupbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport \"../../assets/styles/custom.css\";\nimport HeaderComponent from \"./archiveHeader\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport FooterComponent from \"../Footer/footer\";\nimport { Icon } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport Header from \"../Header/header\";\nimport Loader from \"./loader\";\nimport Utils from \"../../utility\";\nimport { TweetService } from \"../../services/index\";\n\nconst Container = styled.div`\n  width: 500px;\n  height: 100%;\n  background-color: #ffffff;\n  border: solid 0.5px #d3d3d3;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    width: 100%;\n  }\n  @media (min-width: 2000px) {\n    width: 100%;\n  }\n`;\n\nconst Heading = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 15px;\n  padding-top: 3%;\n  padding-left: 4%;\n`;\n\nconst BackArrow = styled.span`\n  color: #1e90ff;\n  font-size: 15px;\n  padding-top: 3%;\n  padding-left: 2%;\n`;\nconst Tweetdata = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  box-sizing: border-box;\n  width: 100%;\n  border: solid #5b6dcd 1px;\n  border: none;\n  padding: 3%;\n`;\nconst Imagedata = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  box-sizing: border-box;\n  width: 100%;\n  border: solid #5b6dcd 1px;\n  border-radius: 15px;\n  border: Visible;\n  // padding: 1%;\n`;\nconst Name = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 15px;\n  margin-left: 1%;\n`;\nconst Email = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 11px;\n`;\nconst Time = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst QuoteTweet = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst QuoteTweetcount = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Likes = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Date = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Twitterwebapp = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Retweets = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Retweetscount = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Likescount = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 13px;\n`;\nconst Like = styled.span`\n  font-family: \"Raleway\", sans-serif !important;\n  font-size: 10px;\n`;\nconst Details = styled.div`\n  border: none;\n`;\nconst Mainbox = styled.div`\n  display: flex;\n  justify-content: center;\n  /* @media (min-width: 0px) and (max-width: 767px) {\n    width: 100%;\n    padding-left: 10%;\n    padding-right: 10%;\n  } */\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // justifyContent: 'flex-end',\n    justifyContent: \"center\",\n  },\n  mainColumn: {\n    width: \"100%\",\n  },\n\n  first_row: {\n    padding: \"2%\",\n  },\n  second_row: {\n    paddingTop: \"2%\",\n  },\n  third_row: {\n    paddingBottom: \"3%\",\n  },\n\n  avatar: {\n    marginLeft: \"2%\",\n  },\n  span_tweet: {\n    fontWeight: \"bold\",\n    fontSize: \"20\",\n  },\n  popupgrid: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: \"16px\",\n  },\n  hr_page: {\n    width: \"100%\",\n    color: \"red\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  mainLoaderRow: {\n    display: \"flex\",\n    flexFlow: \"row-nowrap\",\n  },\n  \"@media (min-width: 0px) and (max-width: 766px)\": {\n    mainLoaderRow: {\n      // padding: \"0px 76px\",\n      width: \"100%\",\n    },\n  },\n  \"@media (min-width: 2000px)\": {\n    mainLoaderRow: {\n      width: \"500px\",\n      height: \"100%\",\n    },\n  },\n}));\nexport default function TweetArchive(props) {\n  const classes = useStyles();\n  const textId = useParams();\n  const [advanceSearch, setAdvancesearch] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  // mode:\n\n  const getMode = () => {\n    return JSON.parse(localStorage.getItem(\"mode\")) || false;\n  };\n  const [dark, setMode] = useState(getMode());\n\n  const CheckMode = (mode) => {\n    localStorage.setItem(\"mode\", mode);\n    setMode(mode);\n  };\n\n  useEffect(() => {\n    fetchbyAdvanceSearch();\n  }, []);\n\n  const fetchbyAdvanceSearch = async () => {\n    let data = textId?.tweet;\n    const [err, res] = await Utils.parseResponse(\n      TweetService.getTweetDetails(data)\n    );\n    if (err) {\n      return err;\n    } else {\n      setAdvancesearch(res || \"\");\n      setLoading(false);\n    }\n  };\n\n  // let value = search[0]?.text || \"\";\n  let createBasicTime = advanceSearch[0]?.createdAt || \"-\";\n  let date = moment(createBasicTime).format(\"LL\");\n  let time = moment(createBasicTime).format(\"LT\");\n\n  let advanceValue = advanceSearch[0]?.text || \"\";\n  let advanceName = advanceSearch[0]?.name || \"-\";\n  let createAdvanceTime = advanceSearch[0]?.createdAt || \"-\";\n  let advanceDate = moment(createAdvanceTime).format(\"LL\");\n  let advanceTime = moment(createAdvanceTime).format(\"LT\");\n  let advanceIcon =\n    advanceName[0]\n      ?.split(\" \")\n      ?.map((x) => x.charAt(0))\n      ?.join(\"\")\n      ?.substr(0, 1)\n      ?.toUpperCase() || \"-\";\n  let advanceHandle = advanceSearch[0]?.username || \"\";\n\n  return (\n    <>\n      <Header CheckMode={CheckMode} />\n      <br />\n      {isLoading ? (\n        <Grid xs={12}>\n          <Mainbox>\n            <Row className={classes.mainLoaderRow}>\n              <Container>\n                <Column className={classes.mainColumn}>\n                  <Row>\n                    <Heading className={classes.span_tweet}>\n                      <span className={classes.span_tweet}>Tweet</span>\n                    </Heading>\n                  </Row>\n                  <hr className={classes.hr_page} />\n                  <Row>\n                    <Avatar className={classes.avatar}>-</Avatar>\n                    <Name>\n                      <Row className={classes.span_tweet}>{\"\"}</Row>\n                      <Row>\n                        <Email>{\"\"}</Email>\n                      </Row>\n                    </Name>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Tweetdata>\n                      {\"\"}\n                      <Loader />\n                      {\"\"}\n                    </Tweetdata>\n                  </Row>\n                  <hr className={classes.hr_page} />\n                  <Row className={classes.second_row}>\n                    <Details>\n                      <Time>\n                        {\" \"}\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        {\"\"}\n                        &emsp;\n                      </Time>\n                      <Date>\n                        &nbsp;\n                        {\"\"}\n                        &emsp;\n                      </Date>\n                    </Details>\n                  </Row>\n                  <br />\n                </Column>\n              </Container>\n            </Row>\n          </Mainbox>\n        </Grid>\n      ) : (\n        <Grid xs={12}>\n          <Mainbox>\n            <Row className={classes.mainLoaderRow}>\n              <Container>\n                <Column className={classes.mainColumn}>\n                  <Row>\n                    {/* <BackArrow>\n                      <a href=\"/\">\n                        <ArrowBackIcon />\n                      </a>\n                    </BackArrow> */}\n                    <Heading className={classes.span_tweet}>\n                      <span className={classes.span_tweet}>Tweet</span>\n                    </Heading>\n                  </Row>\n                  <hr className={classes.hr_page} />\n                  <Row>\n                    <Avatar className={classes.avatar}>\n                      {advanceSearch ? advanceIcon : \"-\"}\n                    </Avatar>\n                    <Name>\n                      <Row className={classes.span_tweet}>\n                        {advanceSearch ? advanceName : \"-\"}\n                      </Row>\n                      <Row>\n                        <Email>\n                          {advanceSearch ? \"@\" + advanceHandle : \"\"}\n                        </Email>\n                      </Row>\n                    </Name>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Tweetdata>\n                      <span className={classes.span_tweet}>\n                        {advanceSearch?.length >= 1 ? advanceValue : \"\"}\n                      </span>\n                    </Tweetdata>\n                  </Row>\n                  <hr className={classes.hr_page} />\n                  <Row className={classes.second_row}>\n                    <Details>\n                      <Time>\n                        {\" \"}\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        {advanceSearch.length >= 1 ? advanceTime : \"\"}\n                        &emsp;\n                      </Time>\n                      <Date>\n                        &nbsp;\n                        {advanceSearch\n                          ? advanceDate\n                            ? advanceDate\n                            : \"Loading..\"\n                          : date\n                          ? date\n                          : \"Loading..\"}\n                        &emsp;\n                      </Date>\n                    </Details>\n                  </Row>\n                  <br />\n                </Column>\n              </Container>\n            </Row>\n          </Mainbox>\n        </Grid>\n      )}\n      <br />\n      <br />\n    </>\n  );\n}\n","export { default as TweetService } from \"./tweetServices\"","import { httpConstants } from \"../constants\";\n\nexport const httpService = (method, headers, data, url) => {\n  const requestOptions = {\n    method: method,\n    headers: headers || { \"Content-Type\": \"application/json\" },\n  };\n\n  if (method !== httpConstants.METHOD_TYPE.GET)\n    requestOptions.body = JSON.stringify(data);\n  return fetch(url, requestOptions)\n    .then(function handleResponse(response) {\n      //in case API is down-\n      if (!response || !response.ok)\n        return Promise.reject(\"Unable to fetch data\");\n\n      return response.text().then((responseText) => {\n        if (!responseText) return Promise.reject(responseText);\n\n        let data;\n        try {\n          data =\n            typeof responseText === \"object\"\n              ? responseText\n              : JSON.parse(responseText);\n          if (data && !data.success)\n            return Promise.reject(\n              (data && data.responseCode) === 404\n                ? data\n                : (data && {\n                    message: data.message,\n                    responseCode: data.responseCode,\n                    responseData: data.responseData,\n                  }) ||\n                    response.statusText\n            );\n        } catch (err) {\n          // console.log('Class: httpService, Function: fetch ==', err);\n          return Promise.reject(err);\n        }\n        return data;\n      });\n    })\n    .catch(function (err) {\n      // console.log('Class: httpService, Function: fetch ==', err);\n      return Promise.reject(err);\n    });\n};\nexport const httpGetService = (method, headers, data, url) => {\n  const requestOptions = {\n    method: method,\n    headers: headers || { \"Content-Type\": \"application/json\" },\n  };\n\n  if (method !== httpConstants.METHOD_TYPE.GET)\n    requestOptions.body = JSON.stringify(data);\n  return fetch(url, requestOptions)\n    .then(function handleResponse(response) {\n      return response.text().then((responseText) => {\n        if (!responseText) return Promise.reject(responseText);\n        let data;\n        try {\n          data =\n            typeof responseText === \"object\"\n              ? responseText\n              : JSON.parse(responseText);\n        } catch (err) {\n          // console.log('Class: httpService, Function: fetch ==', err);\n          return Promise.reject(err);\n        }\n        return data;\n      });\n    })\n    .catch(function (err) {\n      // console.log('Class: httpService, Function: fetch ==', err);\n      return Promise.reject(err);\n    });\n};\n","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  getSaveTweetList,\n  getReadTweetList,\n  getReadGraphData,\n  getSaveGraphData,\n  getBasicSearch,\n  getAdvanceSearch,\n  getMapHashtags,\n  getTweetDetails,\n  getMaxTps,\n  saveMaxTps\n};\n\nasync function saveMaxTps(requestData) {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER + httpConstants.API_END_POINT.SAVE_MAX_TPS;\n\nreturn httpService(\n    httpConstants.METHOD_TYPE.POST,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n   requestData,\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getSaveTweetList() {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER + process.env.REACT_APP_SAVED_TWEET;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getReadTweetList() {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER + process.env.REACT_APP_READ_TWEET;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getReadGraphData() {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_READ_SPEED_DATA;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getSaveGraphData() {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_SAVING_SPEED_DATA;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getBasicSearch(requestData) {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_BASIC_SEARCH +\n    requestData;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getAdvanceSearch(requestData) {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_ADVANCE_SEARCH +\n    \"name=\" +\n    requestData.username +\n    \"&keyword=\" +\n    requestData.keyword +\n    \"&hash=\" +\n    requestData.hash;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTweetDetails(requestData) {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_ARCHIVE_TWEET_FROM_TESTNET_FOR_ADVANCE_SEARCH +\n    requestData;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getMapHashtags() {\n  let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_TRENDING_HASHTAG;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getMaxTps() {\n    let url =\n    process.env.REACT_APP_BASE_URL_TWITTER +\n    process.env.REACT_APP_MAX_TPS_COUNT\n  \n    return httpService(\n      httpConstants.METHOD_TYPE.GET,\n      { \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON },\n      {},\n      url\n    )\n      .then((response) => {\n        if (\n          !response.success ||\n          response.responseCode !== 200 ||\n          !response.responseData ||\n          response.responseData.length === 0\n        )\n          return Promise.reject();\n        return Promise.resolve(response.responseData);\n      })\n      .catch(function (err) {\n        return Promise.reject(err);\n      });\n  }"],"sourceRoot":""}